install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
library(datasets)
data(mtcars)
mtcars
tapply(mtcars$cyl, mean)
tapply(mtcars$cyl)
tapply(mtcars, mtcars$cyl)
?tapply
sapply(mtcars$cyl, mean)
sapply(mtcars$hp, mtcars$cyl, mean)
sapply(mtcars$hp, mean)
sapply(mtcars$hp, 2, mean)
tapply(mtcars$hp, 2, mean)
tapply(mtcars, 2, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
x <- tapply(mtcars$hp, mtcars$cyl, mean)
abs(x$4 - x$8)
abs(x[,1] - x[,3])
abs(x[1,1] - x[1,3])
abs(82.63636 - 209.21429)
round(abs(82.63636 - 209.21429))
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
data(iris)
?iris
tapply(iris$Sepal.Length, iris$Species, mean)
round(6.588)
apply(iris[, 1:4], 2, mean)
install.packages("jsonlite")
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
Url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url = Url, destfile = "./data/american-community-survey.csv" method = "curl")
download.file(url = Url, destfile = "./data/american_community_survey.csv" method = "curl")
download.file(url = Url, destfile = "./data/american_community_survey.csv", method = "curl")
x <- read.csv("./data/american_community_survey.csv", header = TRUE)
head(x)
x$VAL
d <- (x$val == 24)
d
d <- (x$val = 24)
d
d <- (x$val >= 24)
d
d <- (x$val >= 24)
d
x
x$VAL
sum(x$VAL = 24)
sum(x$VAL == 24)
x$val
x$VAL
d <- (x$VAL >= 24)
d
d <- sum(x$VAL >= 24)
d
valid <- !is.na(x$VAL)
valid
valid <- !is.na(x$VAL >= 24)
valid
valid <- sum(!is.na(x$VAL >= 24))
valid
valid <- sum(!is.na(x$VAL = 24))
valid <- sum(!is.na(x$VAL == 24))
valid
rm(list=ls())
install.packages("XLConnect")
library(XLConnect)
install.packages("XLConnectJars")
library(XLConnect)
library(XLConnectJars)
install.packages("xlsx")
library("xlsx")
library(rJava)
library(rJava)
library(rJava)
library(XML)
Url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
df <- xmlTreeParse(Url, useInternalNodes = TRUE)
rootNode <- xmlRoot(df)
names(rootNode)
zip <- xpathSApply(rootNode,"//zipcode",xmlValue)
truezip <- sum(zip == 21231)
truezip
rm(list=ls())
?fread
install.packages("data.table")
library(data.table)
?fread
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "./data/pid.csv", method="curl")
getwd()
ls
setwd("~/Learning/coursera/jh-datascience/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "./data/pid.csv", method="curl")
df <- fread("./data/pid.csv")
DT = data.table(df)
DT
library(dplyr)
DT <- tbl_df(df)
DT
rm("df")
tapply(DT$pwgtp15,DT$SEX,mean)
select(DT, SEX)
install.packages("RMySQL")
source("http://bioconductor.org/biocLite,R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
